---
// Theme toggle component for switching between light and dark modes
---

<button id="theme-toggle" aria-label="Toggle dark mode">
  <svg id="theme-toggle-light-icon" width="20" height="20" viewBox="0 0 20 20" fill="currentColor">
    <path d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z"/>
  </svg>
  <svg id="theme-toggle-dark-icon" width="20" height="20" viewBox="0 0 20 20" fill="currentColor" style="display: none;">
    <path d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z"/>
  </svg>
</button>

<style>
  #theme-toggle {
    background: none;
    border: none;
    cursor: pointer;
    padding: 0.5em;
    display: flex;
    align-items: center;
    justify-content: center;
    color: var(--heading-color);
    transition: color 0.2s ease;
  }

  #theme-toggle:hover {
    color: var(--accent);
  }

  #theme-toggle svg {
    width: 24px;
    height: 24px;
  }
</style>

<script>
  // This script runs on every page load
  const themeToggle = document.getElementById('theme-toggle');
  const lightIcon = document.getElementById('theme-toggle-light-icon');
  const darkIcon = document.getElementById('theme-toggle-dark-icon');
  const html = document.documentElement;

  // Get saved theme from localStorage or default to light
  function getTheme() {
    if (typeof localStorage !== 'undefined') {
      return localStorage.getItem('theme') || 'light';
    }
    return 'light';
  }

  // Save theme to localStorage
  function setTheme(theme: string) {
    if (typeof localStorage !== 'undefined') {
      localStorage.setItem('theme', theme);
    }
  }

  // Update UI based on current theme
  function updateThemeUI(theme: string) {
    if (theme === 'dark') {
      html.classList.add('dark');
      if (lightIcon && darkIcon) {
        lightIcon.style.display = 'none';
        darkIcon.style.display = 'block';
      }
    } else {
      html.classList.remove('dark');
      if (lightIcon && darkIcon) {
        lightIcon.style.display = 'block';
        darkIcon.style.display = 'none';
      }
    }
  }

  // Initialize theme on page load
  const currentTheme = getTheme();
  updateThemeUI(currentTheme);

  // Toggle theme when button is clicked
  if (themeToggle) {
    themeToggle.addEventListener('click', () => {
      const newTheme = html.classList.contains('dark') ? 'light' : 'dark';
      setTheme(newTheme);
      updateThemeUI(newTheme);
    });
  }
</script>
